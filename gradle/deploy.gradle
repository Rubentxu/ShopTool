def defaulSshKeyFile = "${System.properties['user.home']}/.ssh/${config['server.fileRsa']}"

sshOptions {
    trustUnknownHosts = true
    verbose = true
    defaultPassword = "cabrera"
    defaultKeyFile = new File(defaulSshKeyFile)
    defaultPassPhrase  = "cabrera"


    execOptions {
        showOutput = true
        failOnError = true
        succeedOnExitStatus = 0
        maxWait = 30000
    }
}


task deployShopTool {
    description "Instalacion de ShopTool"
    doLast {
        println "************************************************************************************"
        println "directorio ssh $defaulSshKeyFile"
        println "comando ssh  ${config['server.user']}@${config['server.host']}:${config['server.port']}"

        remoteSession {
            host = config['server.host']
            user = config['server.user']
            port = config['server.port']
            passPhrase = config['server.passPhrase']

            def result = exec(command: '[ -f /lib/systemd/system/shoptool.service ] && echo "Found" || echo "Not found"'
                               , failOnError: false, showOutput: true)
            println "result $result.exitStatus"
            if (result.exitStatus == 0) {
              result.output.eachLine { line ->

                if (line.contains('Not found')) {

                     exec "sudo useradd shoptool -s /sbin/nologin -M"
                     scp {
                        from { localFile "gradle/shoptool.service" }
                        into { remoteFile '/home/rubentxu/shoptool.service' }
                     }
                     exec "sudo mv /home/rubentxu/shoptool.service /lib/systemd/system/shoptool.service"
                     exec "sudo chmod 755 /lib/systemd/system/shoptool.service"
                     exec "sudo systemctl enable shoptool.service"
                   }

                scp {
                  from { localDir "build/" }
                  into { remoteDir '/home/rubentxu/' }
                }
                exec "sudo chmod 750 /home/rubentxu/ShopTool_linux_amd64"
                exec "sudo systemctl restart shoptool.service"
              }
            }
        }
    }
}

deployShopTool.dependsOn build


