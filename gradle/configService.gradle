def defaulSshKeyFile = "${System.properties['user.home']}/.ssh/${config['server.fileRsa']}"
println "directorio ssh $defaulSshKeyFile"

import com.github.mustachejava.DefaultMustacheFactory;

sshOptions {
    trustUnknownHosts = true
    verbose = true
    defaultPassword = ""
    defaultKeyFile = new File(defaulSshKeyFile)
    defaultPassPhrase = ""

    execOptions {
        showOutput = true
        failOnError = true
        succeedOnExitStatus = 0
        maxWait = 30000
    }
}


task m << {
	HashMap<String, Object> scopes = new HashMap<String, Object>();
    scopes.put("name", "Mustache");
    scopes.put("feature", "Perfect!");

    Writer writer = new OutputStreamWriter(System.out);
    def mf = new DefaultMustacheFactory();
    def mustache = mf.compile(new StringReader("{{name}}, {{feature}}!"), "example");
    mustache.execute(writer, scopes);
    writer.flush();
}

task instalarApp {
    description "Instalar app"
    doLast {
        println "************************************************************************************"
        println "comando ssh  ${config['server.user']}@${config['server.host']}:${config['server.port']}"



        remoteSession {
            host = config['server.host']
            user = config['server.user']
            port = config['server.port']

            def result = exec(command: 'gem sources -l', failOnError: false, showOutput: true)
            def containsNexusSources = false
            result.output.eachLine { line ->
                if (line.contains('https://rubygems.org/')) {
                    exec "gem source -r https://rubygems.org/"
                }
                if (line.contains("${config['repositoryRuby']}")) {
                    containsNexusSources = true
                }
            }
            if (!containsNexusSources) {
                exec "gem source -a ${config['repositoryRuby']}"
                exec "gem sources -l"
            }

            gemas.each { gem ->
                exec "gem uninstall $gem"
                exec "gem install $gem"
                exec "gem list"
            }

        }
    }
}
