buildscript {
    apply from: 'gradle/config/buildFunctions.groovy'
    ext.config = propiedadesDeEntorno()

    repositories {
        mavenCentral()
        maven { url config['repositoryCentral'] }
    }

    dependencies {
        classpath 'com.aestasit.infrastructure.sshoogr:sshoogr-gradle:0.9.18'
    }

}

plugins {
   id 'com.github.blindpirate.gogradle' version '0.7.0'
}
apply plugin: 'secureShell'
apply from: 'gradle/deploy.gradle'

golang {
    packagePath = 'ShopTool'
}



repositories {
    golang {
        root ~/github\.com\/[\w-]+\/[\w-]+/
        url { path ->
            def split = path.split('/')
            "https://github.com/${split[1]}/${split[2]}"
        }
    }
    golang {
        root ~/git\.apache\.org\/thrift\.git\/lib\/go\/thrift/
        url "https://github.com/apache/thrift/tree/master/lib/go/thrift/"
    }
}

version '0.0.1'

dependencies {
    golang {
        build('github.com/apache/thrift/') {
            exclude name: 'common'
            exclude name: 'gen/stress'
            exclude name: 'gen/thrifttest'
            exclude name: 'git.apache.org/thrift.git/lib/go/thrift'
            exclude name: 'shared'
            exclude name: 'thrift'
            exclude name: 'tutorial'
        }
    }
}

def targets = ['linux-amd64']
def env = ext.properties.getOrDefault('env','dev')
if( env == 'prod') {
    targets = ['linux-amd64', 'windows-amd64', 'darwin-amd64']
}


build {
     exec {
         commandLine 'rm', '-fr', '-R', "${buildDir}"
     }
     copy {
         from 'application.yml'
         into { "${buildDir}" }
     }
     copy {
         from "${rootDir}/products/public"
         into { "${buildDir}/public" }
     }

     exec {
          workingDir  "${buildDir}"
          commandLine 'mkdir', 'images'
     }
     targetPlatform = targets
     go 'build -o ./build/ShopTool_${GOOS}_${GOARCH}${GOEXE} ./'

}


task replaceTokens << {
     ant.replaceregexp(match:'@URLDOCS@', replace: "http://${config['server.host']}:8081/api/product/docs/swagger-product.yaml", flags:'g', byline:true) {
            fileset(dir: "${buildDir}/public", includes: 'index.html')
     }
     ant.replaceregexp(match:'@URLBASE@', replace: "${config['server.host']}:8081", flags:'g', byline:true) {
            fileset(dir: "${buildDir}/public", includes: 'swagger-product.yaml')
     }

}
build.dependsOn replaceTokens
